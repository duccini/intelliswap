# IntelliSwap - Front-End

## Tecnologias Utilizadas

- **Frontend**:
  - [Next.js](https://nextjs.org/) (v15.3.2): Framework React para renderiza√ß√£o otimizada e suporte a Turbopack.
  - [React.js](https://reactjs.org/) (v19.0.0): Biblioteca para constru√ß√£o de interfaces de usu√°rio.
  - [TypeScript](https://www.typescriptlang.org/) (v5): Tipagem est√°tica para maior robustez do c√≥digo.
  - [CSS Modules](https://github.com/css-modules/css-modules): Estiliza√ß√£o modular e escal√°vel.
  - [Lucide React](https://lucide.dev/) (v0.510.0): Biblioteca de √≠cones para interfaces.
- **Ferramentas de Desenvolvimento**:
  - [ESLint](https://eslint.org/) (v9) e [eslint-config-next](https://nextjs.org/docs/app/building-your-application/configuring/eslint) (v15.3.2): Para linting e garantia de qualidade do c√≥digo.
  - Vercel: Plataforma de deploy cont√≠nuo.
- **Ferramentas de IA**: ChatGPT, Claude e Gemini foram usados para produtividade (ex.: debugging, sugest√µes de c√≥digo), mas o design e a l√≥gica principal foram desenvolvidos pela equipe para priorizar usabilidade.

## Como Rodar o Projeto

### Pr√©-requisitos

- [Node.js](https://nodejs.org/) (vers√£o 18 ou superior)
- [npm](https://www.npmjs.com/) (gerenciador de pacotes)

### Passos para Instala√ß√£o

1. **Clone o Reposit√≥rio**:

   ```bash
   git clone https://github.com/duccini/intelliswap.git
   cd intelliswap/frontend
   ```

2. **Instale as Depend√™ncias**:

   ```bash
   npm install
   ```

3. **Execute o Projeto em Modo de Desenvolvimento**:

   ```bash
   npm run dev
   ```

   O projeto estar√° dispon√≠vel em `http://localhost:3000`.

4. **Build para Produ√ß√£o**:

   ```bash
   npm run build
   ```

   Ap√≥s o build, inicie o servidor:

   ```bash
   npm run start
   ```

5. **Linting**:
   Para verificar a qualidade do c√≥digo:
   ```bash
   npm run lint
   ```

### Deploy

O MVP est√° hospedado no Vercel:  
üîó [https://intelliswap.vercel.app/](https://intelliswap.vercel.app/)

## Estrutura do Projeto

```
frontend/
‚îú‚îÄ‚îÄ app/                  # P√°ginas e componentes do Next.js
‚îú‚îÄ‚îÄ public/               # Arquivos est√°ticos
‚îú‚îÄ‚îÄ styles/               # CSS Modules
‚îú‚îÄ‚îÄ package.json          # Depend√™ncias e scripts
‚îú‚îÄ‚îÄ tsconfig.json         # Configura√ß√µes do TypeScript
‚îî‚îÄ‚îÄ README.md             # Documenta√ß√£o do projeto
```

## Aplica√ß√£o do Princ√≠pio 80/20

- **Maior Valor com Menor Esfor√ßo**: A an√°lise de risco simplificada, que apresenta pools de forma humanizada, foi a funcionalidade central, reduzindo a complexidade para o usu√°rio.
- **Prioriza√ß√£o**: A equipe focou na usabilidade para atender √†s dores do p√∫blico-alvo, adiando funcionalidades secund√°rias como monetiza√ß√£o ou otimiza√ß√µes avan√ßadas.

## Li√ß√µes Aprendidas

- **Foco no Usu√°rio**: A tecnologia deve servir √†s necessidades do p√∫blico, n√£o ser o objetivo principal.
- **Desafio T√©cnico**: Garantir uma interface intuitiva que simplifique conceitos complexos de DeFi.
- **Melhorias Futuras**: Iterar com base em feedback de usu√°rios e implementar a funcionalidade de c√°lculo autom√°tico de tokens.

## Contato

Guilherme M. B. Duccini  
üìß [guilhermeduccini@gmail.com](mailto:guilhermeduccini@gmail.com)
